{
  "name": "Volo.Abp.BlobStoring.Database.Domain",
  "hash": "",
  "contents": [
    {
      "namespace": "Volo.Abp.BlobStoring.Database",
      "dependsOnModules": [
        {
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "namespace": "Volo.Abp.Domain",
          "name": "AbpDddDomainModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.BlobStoring",
          "namespace": "Volo.Abp.BlobStoring",
          "name": "AbpBlobStoringModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.BlobStoring.Database.Domain.Shared",
          "namespace": "Volo.Abp.BlobStoring.Database",
          "name": "BlobStoringDatabaseDomainSharedModule"
        }
      ],
      "implementingInterfaces": [
        {
          "name": "IAbpModule",
          "namespace": "Volo.Abp.Modularity",
          "declaringAssemblyName": "Volo.Abp.Core",
          "fullName": "Volo.Abp.Modularity.IAbpModule"
        },
        {
          "name": "IOnPreApplicationInitialization",
          "namespace": "Volo.Abp.Modularity",
          "declaringAssemblyName": "Volo.Abp.Core",
          "fullName": "Volo.Abp.Modularity.IOnPreApplicationInitialization"
        },
        {
          "name": "IOnApplicationInitialization",
          "namespace": "Volo.Abp",
          "declaringAssemblyName": "Volo.Abp.Core",
          "fullName": "Volo.Abp.IOnApplicationInitialization"
        },
        {
          "name": "IOnPostApplicationInitialization",
          "namespace": "Volo.Abp.Modularity",
          "declaringAssemblyName": "Volo.Abp.Core",
          "fullName": "Volo.Abp.Modularity.IOnPostApplicationInitialization"
        },
        {
          "name": "IOnApplicationShutdown",
          "namespace": "Volo.Abp",
          "declaringAssemblyName": "Volo.Abp.Core",
          "fullName": "Volo.Abp.IOnApplicationShutdown"
        },
        {
          "name": "IPreConfigureServices",
          "namespace": "Volo.Abp.Modularity",
          "declaringAssemblyName": "Volo.Abp.Core",
          "fullName": "Volo.Abp.Modularity.IPreConfigureServices"
        },
        {
          "name": "IPostConfigureServices",
          "namespace": "Volo.Abp.Modularity",
          "declaringAssemblyName": "Volo.Abp.Core",
          "fullName": "Volo.Abp.Modularity.IPostConfigureServices"
        }
      ],
      "contentType": "abpModule",
      "name": "BlobStoringDatabaseDomainModule",
      "summary": null
    },
    {
      "baseClass": {
        "name": "AggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
        "fullName": "Volo.Abp.Domain.Entities.AggregateRoot<Guid>"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IEntity"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IEntity<Guid>"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IAggregateRoot<Guid>"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IAggregateRoot"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IGeneratesDomainEvents"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "Volo.Abp.Data",
          "declaringAssemblyName": "Volo.Abp.ObjectExtending",
          "fullName": "Volo.Abp.Data.IHasExtraProperties"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Data",
          "fullName": "Volo.Abp.Domain.Entities.IHasConcurrencyStamp"
        },
        {
          "name": "IMultiTenant",
          "namespace": "Volo.Abp.MultiTenancy",
          "declaringAssemblyName": "Volo.Abp.MultiTenancy.Abstractions",
          "fullName": "Volo.Abp.MultiTenancy.IMultiTenant"
        }
      ],
      "methods": [
        {
          "returnType": "Void",
          "namespace": "Volo.Abp.BlobStoring.Database",
          "name": "SetContent",
          "summary": null,
          "isAsync": false,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Byte[]",
              "name": "content",
              "isOptional": false
            }
          ]
        }
      ],
      "collectionProperties": {},
      "navigationProperties": {},
      "namespace": "Volo.Abp.BlobStoring.Database",
      "primaryKeyType": "Guid",
      "properties": [
        {
          "type": "System.Guid",
          "name": "ContainerId",
          "summary": null
        },
        {
          "type": "System.Nullable`1[System.Guid]",
          "name": "TenantId",
          "summary": null
        },
        {
          "type": "System.String",
          "name": "Name",
          "summary": null
        },
        {
          "type": "System.Byte[]",
          "name": "Content",
          "summary": null
        }
      ],
      "contentType": "aggregateRoot",
      "name": "DatabaseBlob",
      "summary": null
    },
    {
      "baseClass": {
        "name": "AggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
        "fullName": "Volo.Abp.Domain.Entities.AggregateRoot<Guid>"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IEntity"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IEntity<Guid>"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IAggregateRoot<Guid>"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IAggregateRoot"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Entities.IGeneratesDomainEvents"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "Volo.Abp.Data",
          "declaringAssemblyName": "Volo.Abp.ObjectExtending",
          "fullName": "Volo.Abp.Data.IHasExtraProperties"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Data",
          "fullName": "Volo.Abp.Domain.Entities.IHasConcurrencyStamp"
        },
        {
          "name": "IMultiTenant",
          "namespace": "Volo.Abp.MultiTenancy",
          "declaringAssemblyName": "Volo.Abp.MultiTenancy.Abstractions",
          "fullName": "Volo.Abp.MultiTenancy.IMultiTenant"
        }
      ],
      "methods": [],
      "collectionProperties": {},
      "navigationProperties": {},
      "namespace": "Volo.Abp.BlobStoring.Database",
      "primaryKeyType": "Guid",
      "properties": [
        {
          "type": "System.Nullable`1[System.Guid]",
          "name": "TenantId",
          "summary": null
        },
        {
          "type": "System.String",
          "name": "Name",
          "summary": null
        }
      ],
      "contentType": "aggregateRoot",
      "name": "DatabaseBlobContainer",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.BlobStoring.Database",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.BlobStoring.Database",
        "primaryKeyType": "Guid",
        "properties": [],
        "contentType": "entity",
        "name": "DatabaseBlobContainer",
        "summary": null
      },
      "implementingInterfaces": [
        {
          "name": "IBasicRepository<DatabaseBlobContainer, Guid>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IBasicRepository<DatabaseBlobContainer, Guid>"
        },
        {
          "name": "IBasicRepository<DatabaseBlobContainer>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IBasicRepository<DatabaseBlobContainer>"
        },
        {
          "name": "IReadOnlyBasicRepository<DatabaseBlobContainer>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository<DatabaseBlobContainer>"
        },
        {
          "name": "IRepository",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IRepository"
        },
        {
          "name": "IReadOnlyBasicRepository<DatabaseBlobContainer, Guid>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository<DatabaseBlobContainer, Guid>"
        }
      ],
      "methods": [
        {
          "returnType": "DatabaseBlobContainer",
          "namespace": "Volo.Abp.BlobStoring.Database",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        }
      ],
      "contentType": "repositoryInterface",
      "name": "IDatabaseBlobContainerRepository",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.BlobStoring.Database",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.BlobStoring.Database",
        "primaryKeyType": "Guid",
        "properties": [],
        "contentType": "entity",
        "name": "DatabaseBlob",
        "summary": null
      },
      "implementingInterfaces": [
        {
          "name": "IBasicRepository<DatabaseBlob, Guid>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IBasicRepository<DatabaseBlob, Guid>"
        },
        {
          "name": "IBasicRepository<DatabaseBlob>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IBasicRepository<DatabaseBlob>"
        },
        {
          "name": "IReadOnlyBasicRepository<DatabaseBlob>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository<DatabaseBlob>"
        },
        {
          "name": "IRepository",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IRepository"
        },
        {
          "name": "IReadOnlyBasicRepository<DatabaseBlob, Guid>",
          "namespace": "Volo.Abp.Domain.Repositories",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "fullName": "Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository<DatabaseBlob, Guid>"
        }
      ],
      "methods": [
        {
          "returnType": "DatabaseBlob",
          "namespace": "Volo.Abp.BlobStoring.Database",
          "name": "FindAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "containerId",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Boolean",
          "namespace": "Volo.Abp.BlobStoring.Database",
          "name": "ExistsAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "containerId",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Boolean",
          "namespace": "Volo.Abp.BlobStoring.Database",
          "name": "DeleteAsync",
          "summary": null,
          "isAsync": true,
          "isPublic": true,
          "isPrivate": false,
          "isStatic": false,
          "parameters": [
            {
              "type": "Guid",
              "name": "containerId",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "autoSave",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        }
      ],
      "contentType": "repositoryInterface",
      "name": "IDatabaseBlobRepository",
      "summary": null
    }
  ]
}